import unittest


from calculators.bridge import theoretical_bridge
from calculators.optimizer import Optimizer
from util.enums import BridgeOption

request = {
    "fitness": 4.4,
    "curve": [
        24.760265984966853,
        24.760265984966853,
        24.760265984966853,
        24.760265984966853,
        24.760265984966853,
        24.760265984966853,
        24.760265984966853,
        24.760265984966853,
        24.66132013232447,
        24.405921000051023,
        24.405921000051023,
        24.405921000051023,
        24.405921000051023,
        24.405921000051023,
        24.263870398510857,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.157464646595628,
        23.14494941140656,
        22.79260349905688,
        22.76124725733934,
        22.76124725733934,
        22.70409513574823,
        22.70409513574823,
        22.70409513574823,
        22.70409513574823,
        22.70409513574823,
        22.70409513574823,
        22.03365351452154,
        22.03365351452154,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        22.0039560668872,
        21.936000287548488,
        21.371589345517165,
        21.05947717635218,
        21.05947717635218,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.968809996991478,
        19.70095921290463,
        19.67310843030912,
        19.67310843030912,
        19.67310843030912,
        19.67310843030912,
        19.67310843030912,
        19.67310843030912,
        19.67310843030912,
        19.67310843030912,
        19.67310843030912,
        19.569920974028108,
        19.569920974028108,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        19.424168524288945,
        18.834064835696655,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.815049522335027,
        18.80877678463467,
        17.67603549803516,
        17.67603549803516,
        17.67603549803516,
        17.67603549803516,
        17.67603549803516,
        17.67603549803516,
        17.669540861902142,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.339579565159493,
        16.337756146654282,
        16.337756146654282,
        15.929791913230055,
        15.929791913230055,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.868801445516398,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.867630817358892,
        14.860424440477974,
        14.539091423284532,
        14.539091423284532,
        14.539091423284532,
        14.437161475477517,
        14.437161475477517,
        14.437161475477517,
        14.437161475477517,
        14.437161475477517,
        14.437161475477517,
        14.168245320431206,
        14.168245320431206,
        14.168245320431206,
        14.168245320431206,
        14.168245320431206,
        14.168245320431206,
        14.168245320431206,
        14.168245320431206,
        14.168245320431206,
        14.168245320431206,
        13.846770027057604,
        13.846770027057604,
        13.846770027057604,
        13.442128212486182,
        13.442128212486182,
        13.442128212486182,
        13.442128212486182,
        13.442128212486182,
        13.442128212486182,
        13.442128212486182,
        12.854682185001785,
        12.854682185001785,
        12.269860280355859,
        12.269860280355859,
        12.269860280355859,
        12.269860280355859,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.649962921657089,
        11.616263088138906,
        11.616263088138906,
        11.616263088138906,
        11.145731745164484,
        11.145731745164484,
        11.145731745164484,
        11.145731745164484,
        11.145731745164484,
        11.145731745164484,
        11.145731745164484,
        11.145731745164484,
        11.145731745164484,
        11.145731745164484,
        10.634358227132175,
        10.634358227132175,
        10.396491622667979,
        10.396491622667979,
        10.396491622667979,
        10.396491622667979,
        10.396491622667979,
        10.396491622667979,
        10.396491622667979,
        10.396491622667979,
        10.396491622667979,
    ],
    "pillVolume": 10,
    "pillDensity": 350,
    "bridgingMode": "PERMEABILITY",
    "bridgingValue": 500,
    "weighting": {"bridge": 5, "cost": 5, "co2": 5, "environmental": 5},
    "products": {
        "b": {"id": "baracarb150", "value": 45, "percentage": 12},
        "c": {"id": "supercom", "value": 88, "percentage": 12},
        "d": {"id": "compound-V", "value": 77, "percentage": 12},
        "e": {"id": "tight-seal", "value": 5, "percentage": 12},
        "f": {"id": "tighterfit", "value": 6, "percentage": 12},
        "g": {"id": "Compund-B", "value": 56, "percentage": 12},
    },
    "totalMass": 3500,
    "email": "test@equinor.com",
    "user": "Test Testson",
}


class CalcPerfTest(unittest.TestCase):
    @staticmethod
    def test_calculate_performance_normal_values():
        experimental_bridge = [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.009285714285714286,
            0.03285714285714286,
            0.15642857142857144,
            0.47235714285714286,
            0.9794285714285714,
            1.625857142857143,
            2.3253571428571433,
            3.0238571428571435,
            3.7215000000000003,
            4.456714285714286,
            5.290285714285714,
            6.270071428571429,
            7.422285714285714,
            8.748,
            10.240142857142859,
            11.903642857142856,
            13.734857142857145,
            15.728142857142858,
            17.8685,
            20.133357142857147,
            22.502499999999998,
            24.9545,
            27.478357142857142,
            30.059285714285714,
            32.70528571428572,
            35.417642857142866,
            38.206714285714284,
            41.09214285714286,
            44.10049999999999,
            47.26971428571427,
            50.63585714285714,
            54.247928571428574,
            58.13192857142858,
            62.28471428571429,
            66.65507142857143,
            71.11764285714285,
            75.48807142857142,
            79.53007142857142,
            83.05835714285715,
            85.92385714285714,
            88.05585714285715,
            89.70292857142857,
            91.11307142857142,
            92.30685714285715,
            93.41014285714284,
            94.41485714285716,
            95.31214285714287,
            96.10271428571428,
            96.79014285714285,
            97.3795,
            97.87485714285714,
            98.29599999999999,
            98.65050000000001,
            98.94685714285716,
            99.19264285714286,
            99.39528571428572,
            99.56164285714286,
            99.69457142857144,
            99.79835714285714,
            99.87564285714286,
            99.93264285714285,
            99.9715,
            99.99249999999999,
            99.99828571428571,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
        ]
        mass_goal = 1000
        mass_result = 800
        products_goal = 5
        products_result = 4
        particle_range = (1.01, 100.0)
        performance = Optimizer(
            bridge=theoretical_bridge(BridgeOption.PERMEABILITY, 500),
            max_products=products_goal,
            mass_goal=mass_goal,
            particle_range=particle_range,
        ).calculate_performance(experimental_bridge, mass_result, products_result)
        print(performance)

    @staticmethod
    def test_calculate_performance_tripple_values():
        experimental_bridge = [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.009285714285714286,
            0.03285714285714286,
            0.15642857142857144,
            0.47235714285714286,
            0.9794285714285714,
            1.625857142857143,
            2.3253571428571433,
            3.0238571428571435,
            3.7215000000000003,
            4.456714285714286,
            5.290285714285714,
            6.270071428571429,
            7.422285714285714,
            8.748,
            10.240142857142859,
            11.903642857142856,
            13.734857142857145,
            15.728142857142858,
            17.8685,
            20.133357142857147,
            22.502499999999998,
            24.9545,
            27.478357142857142,
            30.059285714285714,
            32.70528571428572,
            35.417642857142866,
            38.206714285714284,
            41.09214285714286,
            44.10049999999999,
            47.26971428571427,
            50.63585714285714,
            54.247928571428574,
            58.13192857142858,
            62.28471428571429,
            66.65507142857143,
            71.11764285714285,
            75.48807142857142,
            79.53007142857142,
            83.05835714285715,
            85.92385714285714,
            88.05585714285715,
            89.70292857142857,
            91.11307142857142,
            92.30685714285715,
            93.41014285714284,
            94.41485714285716,
            95.31214285714287,
            96.10271428571428,
            96.79014285714285,
            97.3795,
            97.87485714285714,
            98.29599999999999,
            98.65050000000001,
            98.94685714285716,
            99.19264285714286,
            99.39528571428572,
            99.56164285714286,
            99.69457142857144,
            99.79835714285714,
            99.87564285714286,
            99.93264285714285,
            99.9715,
            99.99249999999999,
            99.99828571428571,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
        ]
        mass_goal = 1000
        mass_result = 3001
        products_goal = 5
        products_result = 15
        particle_range = (1.01, 100.0)
        performance = Optimizer(
            bridge=theoretical_bridge(BridgeOption.PERMEABILITY, 500),
            max_products=products_goal,
            mass_goal=mass_goal,
            particle_range=particle_range,
        ).calculate_performance(experimental_bridge, mass_result, products_result)
        print(performance)

    def test_calculate_performance_zero_values(self):
        experimental_bridge = [
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.0,
            0.009285714285714286,
            0.03285714285714286,
            0.15642857142857144,
            0.47235714285714286,
            0.9794285714285714,
            1.625857142857143,
            2.3253571428571433,
            3.0238571428571435,
            3.7215000000000003,
            4.456714285714286,
            5.290285714285714,
            6.270071428571429,
            7.422285714285714,
            8.748,
            10.240142857142859,
            11.903642857142856,
            13.734857142857145,
            15.728142857142858,
            17.8685,
            20.133357142857147,
            22.502499999999998,
            24.9545,
            27.478357142857142,
            30.059285714285714,
            32.70528571428572,
            35.417642857142866,
            38.206714285714284,
            41.09214285714286,
            44.10049999999999,
            47.26971428571427,
            50.63585714285714,
            54.247928571428574,
            58.13192857142858,
            62.28471428571429,
            66.65507142857143,
            71.11764285714285,
            75.48807142857142,
            79.53007142857142,
            83.05835714285715,
            85.92385714285714,
            88.05585714285715,
            89.70292857142857,
            91.11307142857142,
            92.30685714285715,
            93.41014285714284,
            94.41485714285716,
            95.31214285714287,
            96.10271428571428,
            96.79014285714285,
            97.3795,
            97.87485714285714,
            98.29599999999999,
            98.65050000000001,
            98.94685714285716,
            99.19264285714286,
            99.39528571428572,
            99.56164285714286,
            99.69457142857144,
            99.79835714285714,
            99.87564285714286,
            99.93264285714285,
            99.9715,
            99.99249999999999,
            99.99828571428571,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
            99.99892857142858,
        ]
        mass_goal = 1000
        mass_result = 0
        products_goal = 5
        products_result = 0
        particle_range = (1.01, 100.0)

        performance = Optimizer(
            bridge=theoretical_bridge(BridgeOption.PERMEABILITY, 500),
            max_products=products_goal,
            mass_goal=mass_goal,
            particle_range=particle_range,
        ).calculate_performance(experimental_bridge, mass_result, products_result)
        print(performance)

    @staticmethod
    def test_calculate_performance_perfect_bridge():
        mass_goal = 1000
        mass_result = 1000
        products_goal = 5
        products_result = 5
        particle_range = (1.01, 100.0)
        performance = Optimizer(
            bridge=theoretical_bridge(BridgeOption.PERMEABILITY, 500),
            max_products=products_goal,
            mass_goal=mass_goal,
            particle_range=particle_range,
        ).calculate_performance(theoretical_bridge(BridgeOption.PERMEABILITY, 500), mass_result, products_result)
        print(performance)
